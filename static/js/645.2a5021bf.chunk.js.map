{"version":3,"file":"static/js/645.2a5021bf.chunk.js","mappings":"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","sources":["components/MedicineList/MedicineList.styled.jsx","services/pharmaciesService.js","services/medicinesService.js","components/PharmacyList/PharmacyList.styled.jsx","components/PharmacyList/PharmacyList.jsx","components/MedicineList/MedicineList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLi = styled.li`\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid #ccc;\n  margin-bottom: 10px;\n  padding: 10px;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h3`\n  font-weight: bold;\n  margin: 0;\n  text-align: left;\n`;\n\nexport const Text = styled.p`\n  margin: 10px 0 0 0;\n`;\n\nexport const Price = styled.p`\n  margin: 0;\n  text-align: right;\n  font-weight: bold;\n`;\n\nexport const Button = styled.button`\n  margin-left: auto;\n  padding: 10px 30px;\n  margin-top: 5px;\n  background-color: #59ad59;\n  border: none;\n  font-weight: bold;\n  border-radius: 8px;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n\n  &:hover {\n    background-color: #5ac45a;\n    transform: scale(1.1);\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nexport const getAllPharmacies = async () => {\n  const { data } = await axios.get('/pharmacies');\n  return data.result;\n};\n","import axios from 'axios';\n\nexport const getAllMedicines = async () => {\n  const { data } = await axios.get('/medicines');\n  return data.result;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLi = styled.li`\n  border: 1px solid #ccc;\n  padding: 10px;\n  margin-bottom: 10px;\n  transition: transform 0.3s ease;\n  text-align: center;\n\n  &:hover {\n    color: #59ad59;\n    transform: scale(1.1);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n","import React from 'react';\nimport { StyledLi, StyledLink } from './PharmacyList.styled';\n\nconst PharmacyList = ({ pharmacies }) => {\n  return (\n    <div>\n      <h3 style={{ textAlign: 'center' }}>Shops</h3>\n      <ul>\n        {pharmacies.map(({ _id, name, phone }) => (\n          <StyledLi key={_id}>\n            <StyledLink to={`/pharmacies`}>\n              <p>{name}</p>\n              <p>{phone}</p>\n            </StyledLink>\n          </StyledLi>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PharmacyList;\n","import React, { useState } from 'react';\nimport { useCart } from '../hooks/useCart';\nimport { StyledLi, Title, Text, Price, Button } from './MedicineList.styled';\n\nconst MedicineList = ({ medicines }) => {\n  const { addToCart } = useCart();\n\n  const [addedToCart, setAddedToCart] = useState([]);\n\n  const handleAddToCart = medicine => {\n    addToCart(medicine);\n    setAddedToCart([...addedToCart, medicine._id]);\n  };\n\n  return (\n    <div style={{ height: '80vh', overflowY: 'scroll' }}>\n      <ul>\n        {medicines.map(medicine => (\n          <StyledLi key={medicine._id}>\n            <Title>{medicine.title}</Title>\n            <Text>{medicine.description}</Text>\n            <Price>${medicine.price}</Price>\n            <Button\n              onClick={() => handleAddToCart(medicine)}\n              disabled={addedToCart.includes(medicine._id)}\n            >\n              {addedToCart.includes(medicine._id)\n                ? 'Already in cart'\n                : 'Add to cart'}\n            </Button>\n          </StyledLi>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MedicineList;\n","import { getAllPharmacies } from '../../services/pharmaciesService';\nimport { getAllMedicines } from '../../services/medicinesService';\nimport Loader from '../../components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport PharmacyList from '../../components/PharmacyList/PharmacyList';\nimport MedicineList from '../../components/MedicineList/MedicineList';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [pharmacies, setPharmacies] = useState([]);\n  const [medicines, setMedicines] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const [error, setError] = useState('');\n\n  const addToCart = medicineId => {\n    const selectedMedicine = medicines.find(\n      medicine => medicine._id === medicineId\n    );\n\n    if (selectedMedicine) {\n      setCartItems([...cartItems, selectedMedicine]);\n    } else {\n      console.error(`Medicine with id ${medicineId} not found`);\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getAllPharmacies()\n      .then(allPharmacies => {\n        setPharmacies(allPharmacies);\n      })\n      .catch(error => {\n        setError(error.message);\n      });\n\n    getAllMedicines()\n      .then(getAllMedicines => {\n        setMedicines(getAllMedicines);\n      })\n      .catch(error => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div style={{ display: 'flex' }}>\n      {isLoading && <Loader />}\n      <div style={{ flex: '0 0 30%', marginRight: '20px' }}>\n        <PharmacyList pharmacies={pharmacies} />\n      </div>\n      <div style={{ flex: '1' }}>\n        <MedicineList medicines={medicines} addToCart={addToCart} />\n      </div>\n\n      {error && (\n        <p style={{ textAlign: 'center', margin: 'auto' }}>Sorry. {error} ðŸ˜­</p>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["StyledLi","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Text","_templateObject3","Price","_templateObject4","Button","_templateObject5","getAllPharmacies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","sent","abrupt","result","stop","apply","arguments","getAllMedicines","StyledLink","Link","pharmacies","_jsxs","children","_jsx","style","textAlign","map","_ref2","_id","name","phone","to","medicines","addToCart","useCart","_useState","useState","_useState2","_slicedToArray","addedToCart","setAddedToCart","height","overflowY","medicine","title","description","price","onClick","concat","_toConsumableArray","handleAddToCart","disabled","includes","isLoading","setIsLoading","_useState3","_useState4","setPharmacies","_useState5","_useState6","setMedicines","_useState7","_useState8","cartItems","setCartItems","_useState9","_useState10","error","setError","useEffect","then","allPharmacies","catch","message","finally","display","Loader","flex","marginRight","PharmacyList","MedicineList","medicineId","selectedMedicine","find","console","margin"],"sourceRoot":""}