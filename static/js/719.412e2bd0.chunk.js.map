{"version":3,"file":"static/js/719.412e2bd0.chunk.js","mappings":"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","sources":["components/Cart/Cart.jsx","components/CartForm/CartForm.jsx","pages/ShoppingCart/ShoppingCart.jsx"],"sourcesContent":["import { useCart } from '../hooks/useCart';\nimport React from 'react';\n\nconst Cart = ({ handleQuantityChange }) => {\n  const { cart, changeQuantity } = useCart();\n\n  const handleInputChange = (event, itemId) => {\n    const newQuantity = parseInt(event.target.value);\n    changeQuantity(itemId, newQuantity);\n  };\n\n  return (\n    <div>\n      <ul>\n        {cart.cartItems.map((item, index) => (\n          <li key={index}>\n            <p>{item.medicine.title}</p>\n            <p>Price ${item.price}</p>\n            <input\n              type=\"number\"\n              value={item.quantity}\n              onChange={event => handleInputChange(event, item.medicine._id)}\n              min=\"1\"\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cart;\n","import React, { useState } from 'react';\n\nconst CartForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    address: '',\n  });\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(formData);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"phone\">Phone:</label>\n          <input\n            type=\"tel\"\n            id=\"phone\"\n            name=\"phone\"\n            value={formData.phone}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"address\">Address:</label>\n          <textarea\n            id=\"address\"\n            name=\"address\"\n            value={formData.address}\n            onChange={handleChange}\n            required\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CartForm;\n","import React from 'react';\nimport Cart from '../../components/Cart/Cart';\nimport CartForm from '../../components/CartForm/CartForm';\nimport { useCart } from '../../components/hooks/useCart';\n\nconst ShoppingCart = () => {\n  const { cart } = useCart();\n\n  return (\n    <div>\n      <CartForm />\n      <Cart cartItems={cart.items} />\n      <p>Total Price: ${cart.totalPrice}</p>\n      <button>Submit</button>\n    </div>\n  );\n};\n\nexport default ShoppingCart;\n"],"names":["_ref","handleQuantityChange","_useCart","useCart","cart","changeQuantity","_jsx","children","cartItems","map","item","index","_jsxs","medicine","title","price","type","value","quantity","onChange","event","itemId","newQuantity","parseInt","target","handleInputChange","_id","min","_useState","useState","name","email","phone","address","_useState2","_slicedToArray","formData","setFormData","handleChange","_event$target","prevState","_objectSpread","_defineProperty","onSubmit","preventDefault","console","log","htmlFor","id","required","CartForm","Cart","items","totalPrice"],"sourceRoot":""}